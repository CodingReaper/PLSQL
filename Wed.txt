1.SELECT *
FROM employees_training
WHERE (salary * 1.25) > 3000;

2.SELECT *
FROM employees_training
WHERE EXTRACT(MONTH FROM hire_date) = 1;

3.SELECT e.first_name, e.last_name, e.employee_id, e.job_id
FROM employees_training e
JOIN departments_training d ON e.department_id = d.department_id
JOIN locations_training l ON d.location_id = l.location_id
WHERE l.city = 'Toronto';

4.SELECT employee_id, 
       first_name, 
       last_name, 
       salary, 
       department_id
FROM EMPLOYEES_TRAINING 
WHERE salary > (SELECT AVG(salary) FROM EMPLOYEES_TRAINING)
AND department_id IN (
	SELECT department_id 
	FROM EMPLOYEES_TRAINING
    WHERE first_name LIKE '%J%'
);

5.select employee_id,first_name,last_name,department_id from employees_training where department_id IN (SELECT distinct department_id
FROM employees_training
WHERE first_name LIKE '%T%');





Lpad:-The LPAD function adds padding characters to the left of a string until it reaches the specified length.
LPAD(string, length, pad_character)
string → The original string to be padded.
length → The final length of the resulting string.
pad_character → (Optional) The character used for padding. If not provided, spaces (' ') are used.

select lpad('ashu',10,'0') from dual;
select lpad('ashu',10) from dual;

Rpad same thing but opposite.


TRUNC(NUMBER):-The TRUNC function in Oracle truncates a number or date to a specified precision.

TRUNC(number, decimal_places)
number → The number to be truncated.
decimal_places → (Optional) The number of decimal places to keep. Defaults to 0.
SELECT TRUNC(123.456, 2) AS result FROM dual;
SELECT TRUNC(12345, -2) AS result FROM dual;

ceil:-CEIL returns the smallest integer that is greater than or equal to n.
SELECT CEIL(-12.34) AS result FROM dual; ans :- (-12)
floor:-The FLOOR function returns the largest integer less than or equal to a given number.
SELECT floor(-12.34) AS result FROM dual;ans:- (-13)

COALESCE function
The COALESCE function takes two or more compatible arguments and returns the first argument that is not null.

substring:-used to return substring from a string.
string → The main string.
start_position → Where to start extracting (1-based index).
length (optional) → Number of characters to extract (default = rest of string).
SELECT SUBSTR('ABCDEFG',-3,2) "Substring"
     FROM DUAL;

The INSTR function returns the position (index) of a substring within a string.

Syntax:
INSTR(string, substring [, start_position [, occurrence]])
string → The main string.
substring → The substring to find.
start_position (optional) → Where to start searching (default = 1).
occurrence (optional) → Which occurrence to find (default = 1st).

SELECT INSTR('Oracle Database', 'a', 1, 2) AS position FROM dual;
